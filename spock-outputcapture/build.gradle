plugins {
    id 'java-library'
    id 'groovy'
    id 'signing'
    id 'maven-publish'
}

java {
    withJavadocJar()
    withSourcesJar()

    registerFeature('spock13') {
        usingSourceSet(sourceSets.main)
    }
    registerFeature('spock20') {
        usingSourceSet(sourceSets.main)
    }
}

dependencies {
    compileOnly platform('org.codehaus.groovy:groovy-bom:3.0.4')

    spock13Api platform('org.spockframework:spock-bom:1.3-groovy-2.5')
    spock20Api platform('org.spockframework:spock-bom:2.0-M2-groovy-3.0')

    api 'org.spockframework:spock-core'
}

publishing {
    publications {
        spockOutputCapture(MavenPublication) {
            from components.java
            pom {
                name = project.name
                description = project.description
                url = "https://github.com/joke/${project.name}"
                licenses {
                    license {
                        name = 'GNU GENERAL PUBLIC LICENSE, Version 3'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'joke'
                        name = 'Joke de Buhr'
                        email = 'joke@seiken.de'
                    }
                }
                scm {
                    connection = "scm:git:git://github.com/joke/${project.name}.git"
                    developerConnection = "scm:git:git://github.com/joke/${project.name}.git"
                    url = "http://github.com/joke/${project.name}/tree/master"
                }
            }
        }
    }
    repositories {
        maven {
            name 'snapshot'
            url 'https://oss.sonatype.org/content/repositories/snapshots'
            credentials {
                username 'joke'
            }
        }
        maven {
            name 'release'
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            credentials {
                username 'joke'
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.spockOutputCapture
}
